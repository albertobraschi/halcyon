---
title:  Home
filter:
  - erb
  - textile
---
h2. Introduction

Halcyon is a JSON Web App Framework built on Rack for speed and light weight.

Halcyon has several aims and goals, including:

* *Be fast* -- easy with "Rack":http://rack.rubyforge.org/ and "Mongrel":http://mongrel.rubyforge.org/ or "Thin":http://code.macournoyer.com/thin
* *Be small* -- also not a problem with Rack and Mongrel
* *Be cross-platform* -- communications are flexible with JSON transport layer
* *Be flexible* -- since it uses HTTP, it's very simple to be flexible
* *Be easy to implement* -- also easy since we're developing in "Ruby":http://ruby-lang.org/ here


h2. Functionality &amp; Performance

With Mongrel leading the pack and Rack holding things up, JSON doing the fast talking and with plenty of room to spare, how could you not be interested, even about this new framework? Still not convinced? OK, fair enough, here's some code for you.

<% coderay(:lang => "ruby", :line_numbers => "inline", :tab_width => 2) do -%>
class Message < Sequel::Model; end
class Messages < Application
  def new
    # respond with fields acceptable
    ok Message.columns
  end
  def create
    msg = Message.create(params)
    msg.save # add error handling
    ok msg.id
  end
  def read
    ok Message[params[:id]]
  end
  def update
    Message.filter(:id => params[:id]).update(params)
    ok
  end
  def delete
    Message.filter(:id => params[:id]).delete
    ok
  end
end
<% end -%>

You can then run it with:

<pre><code>$ halcyon start -p 4647</code></pre>

That's all it takes to open up the door to let you communicate with your applications that implement or use the simple client.

Read the "Docs":/docs/.


h2. Supported Platforms

Halcyon is primarily written in Ruby, but Halcyon also supports multiple platforms due to the fact that it communicates via HTTP and packages its messages in JSON. Halcyon currently has Ruby, PHP, and Java clients available, with more clients planned.

You can see the various client implementations at http://github.com/mtodd/halcyon-clients (except for the Ruby client, which is part of the Halcyon gem).


h2. Metrics

Ohloh's pretty cool and we use it to track the development metrics of Halcyon. Check out some of the more interesting details on our project page. You can find the link at the top of the page.

For your viewing pleasure, here are some of the Ohloh project factoids:

<script type='text/javascript' src='http://www.ohloh.net/projects/10313/widgets/project_factoids'></script>
